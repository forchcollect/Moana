/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package page;

import db.table.BookDAO;
import db.table.BookDTO;
import db.table.CartDAO;
import db.table.MemberDAO;
import db.table.OrderbookDAO;
import db.table.OrdersendDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author STU-05
 */
public class Main extends javax.swing.JFrame
        implements  ActionListener, MouseListener, KeyListener
                        , MouseMotionListener{
    
    DefaultTableModel model=null;
    private String[] colNames={"제목", "저자","출판사", "판매가", "출간일", "ISBN"};
    BookDAO dao=new BookDAO();
    ArrayList<BookDTO> list=new ArrayList<>();
    String userid;
    
    /**
     * Creates new form Home
     */
    public Main() {
        super("모아나 메인페이지");
        initComponents();
        init();
        addEvent();
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jToolBar2 = new javax.swing.JToolBar();
        btAll = new javax.swing.JButton();
        btHome = new javax.swing.JButton();
        btHobby = new javax.swing.JButton();
        btEcono = new javax.swing.JButton();
        btClassic = new javax.swing.JButton();
        btSci = new javax.swing.JButton();
        btSoc = new javax.swing.JButton();
        btNovel = new javax.swing.JButton();
        btCert = new javax.swing.JButton();
        btChild = new javax.swing.JButton();
        btEssay = new javax.swing.JButton();
        btHistory = new javax.swing.JButton();
        btCulture = new javax.swing.JButton();
        btLang = new javax.swing.JButton();
        btTodd = new javax.swing.JButton();
        btSelf = new javax.swing.JButton();
        btReli = new javax.swing.JButton();
        btTeen = new javax.swing.JButton();
        plAdv = new javax.swing.JPanel();
        plAdv1 = new javax.swing.JPanel();
        imgAdv7 = new javax.swing.JLabel();
        imgAdv8 = new javax.swing.JLabel();
        imgAdv9 = new javax.swing.JLabel();
        plAdv2 = new javax.swing.JPanel();
        imgAdv4 = new javax.swing.JLabel();
        imgAdv5 = new javax.swing.JLabel();
        imgAdv6 = new javax.swing.JLabel();
        plAdv3 = new javax.swing.JPanel();
        imgAdv1 = new javax.swing.JLabel();
        imgAdv2 = new javax.swing.JLabel();
        imgAdv3 = new javax.swing.JLabel();
        barAdv = new javax.swing.JToolBar();
        slAdv1 = new javax.swing.JLabel();
        slAdv2 = new javax.swing.JLabel();
        slAdv3 = new javax.swing.JLabel();
        selectTap = new javax.swing.JTabbedPane();
        tapAll = new javax.swing.JPanel();
        tfSearchAll = new javax.swing.JTextField();
        btSearchAll = new javax.swing.JButton();
        tapTitle = new javax.swing.JPanel();
        tfSearchTitle = new javax.swing.JTextField();
        btSearchTitle = new javax.swing.JButton();
        tapAuthor = new javax.swing.JPanel();
        tfSearchAuthor = new javax.swing.JTextField();
        btSearchAuthor = new javax.swing.JButton();
        tapPublisher = new javax.swing.JPanel();
        tfSearchPublisher = new javax.swing.JTextField();
        btSearchPublisher = new javax.swing.JButton();
        tapISBN13 = new javax.swing.JPanel();
        tfSearchISBN13 = new javax.swing.JTextField();
        btSearchISBN13 = new javax.swing.JButton();
        imgLogo = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel();
        plNotLogin = new javax.swing.JPanel();
        btLogin = new javax.swing.JButton();
        btJoin = new javax.swing.JButton();
        plLogined = new javax.swing.JPanel();
        btCart = new javax.swing.JButton();
        btOrderHistory = new javax.swing.JButton();
        btUserEdit = new javax.swing.JButton();
        btLogout = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        lbUserid = new javax.swing.JLabel();
        tfUserid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1028, 1200));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "도서명", "저자", "출판사", "판매가", "출간일", "ISBN"
            }
        ));
        scrollPane.setViewportView(table);

        jToolBar2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar2.setRollover(true);

        btAll.setText("전체");
        btAll.setFocusable(false);
        btAll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btAll.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAllActionPerformed(evt);
            }
        });
        jToolBar2.add(btAll);

        btHome.setText("가정/요리/뷰티");
        btHome.setFocusable(false);
        btHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btHome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHomeActionPerformed(evt);
            }
        });
        jToolBar2.add(btHome);

        btHobby.setText("건강/취미/레저");
        btHobby.setFocusable(false);
        btHobby.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btHobby.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btHobby);

        btEcono.setText("경제경영");
        btEcono.setFocusable(false);
        btEcono.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEcono.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btEcono);

        btClassic.setText("고전");
        btClassic.setFocusable(false);
        btClassic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btClassic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btClassic);

        btSci.setText("과학");
        btSci.setFocusable(false);
        btSci.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSci.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btSci);

        btSoc.setText("사회과학");
        btSoc.setFocusable(false);
        btSoc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSoc.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btSoc);

        btNovel.setText("소설/시/희곡");
        btNovel.setFocusable(false);
        btNovel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNovel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btNovel);

        btCert.setText("수험서/자격증");
        btCert.setFocusable(false);
        btCert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCert.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btCert);

        btChild.setText("어린이");
        btChild.setFocusable(false);
        btChild.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btChild.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btChild);

        btEssay.setText("에세이");
        btEssay.setFocusable(false);
        btEssay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEssay.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btEssay);

        btHistory.setText("역사");
        btHistory.setFocusable(false);
        btHistory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btHistory.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btHistory);

        btCulture.setText("예술/대중문화");
        btCulture.setFocusable(false);
        btCulture.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCulture.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btCulture);

        btLang.setText("외국어");
        btLang.setFocusable(false);
        btLang.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btLang.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btLang);

        btTodd.setText("유아");
        btTodd.setFocusable(false);
        btTodd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTodd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btTodd);

        btSelf.setText("자기계발");
        btSelf.setFocusable(false);
        btSelf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSelf.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btSelf);

        btReli.setText("종교/역학");
        btReli.setFocusable(false);
        btReli.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btReli.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btReli);

        btTeen.setText("청소년");
        btTeen.setFocusable(false);
        btTeen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTeen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(btTeen);

        plAdv.setLayout(new java.awt.CardLayout());

        imgAdv7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/history.jpg"))); // NOI18N

        imgAdv8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/human.jpg"))); // NOI18N

        imgAdv9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/self.png"))); // NOI18N

        javax.swing.GroupLayout plAdv1Layout = new javax.swing.GroupLayout(plAdv1);
        plAdv1.setLayout(plAdv1Layout);
        plAdv1Layout.setHorizontalGroup(
            plAdv1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAdv1Layout.createSequentialGroup()
                .addGroup(plAdv1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(imgAdv9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imgAdv7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imgAdv8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        plAdv1Layout.setVerticalGroup(
            plAdv1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAdv1Layout.createSequentialGroup()
                .addComponent(imgAdv7)
                .addGap(2, 2, 2)
                .addComponent(imgAdv8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgAdv9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        plAdv.add(plAdv1, "card3");

        imgAdv4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/social.jpg"))); // NOI18N

        imgAdv5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/science.jpg"))); // NOI18N

        imgAdv6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/novel.jpg"))); // NOI18N

        javax.swing.GroupLayout plAdv2Layout = new javax.swing.GroupLayout(plAdv2);
        plAdv2.setLayout(plAdv2Layout);
        plAdv2Layout.setHorizontalGroup(
            plAdv2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAdv2Layout.createSequentialGroup()
                .addGroup(plAdv2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgAdv4)
                    .addComponent(imgAdv5)
                    .addComponent(imgAdv6))
                .addGap(8, 8, 8))
        );
        plAdv2Layout.setVerticalGroup(
            plAdv2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAdv2Layout.createSequentialGroup()
                .addComponent(imgAdv4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgAdv5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgAdv6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );

        plAdv.add(plAdv2, "card4");

        imgAdv1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/economic3.PNG"))); // NOI18N

        imgAdv2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/culture.jpg"))); // NOI18N

        imgAdv3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/essay.jpg"))); // NOI18N

        javax.swing.GroupLayout plAdv3Layout = new javax.swing.GroupLayout(plAdv3);
        plAdv3.setLayout(plAdv3Layout);
        plAdv3Layout.setHorizontalGroup(
            plAdv3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAdv3Layout.createSequentialGroup()
                .addGroup(plAdv3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, plAdv3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(imgAdv2))
                    .addComponent(imgAdv1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(plAdv3Layout.createSequentialGroup()
                        .addComponent(imgAdv3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        plAdv3Layout.setVerticalGroup(
            plAdv3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAdv3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgAdv1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgAdv2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgAdv3)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        plAdv.add(plAdv3, "card2");

        barAdv.setRollover(true);

        slAdv1.setForeground(new java.awt.Color(153, 153, 153));
        slAdv1.setText("●");
        slAdv1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        barAdv.add(slAdv1);

        slAdv2.setForeground(new java.awt.Color(153, 153, 153));
        slAdv2.setText("●");
        slAdv2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        barAdv.add(slAdv2);

        slAdv3.setForeground(new java.awt.Color(153, 153, 153));
        slAdv3.setText("●");
        slAdv3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        barAdv.add(slAdv3);

        btSearchAll.setText("검색");

        javax.swing.GroupLayout tapAllLayout = new javax.swing.GroupLayout(tapAll);
        tapAll.setLayout(tapAllLayout);
        tapAllLayout.setHorizontalGroup(
            tapAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapAllLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(tfSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btSearchAll)
                .addGap(73, 73, 73))
        );
        tapAllLayout.setVerticalGroup(
            tapAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapAllLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tapAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearchAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearchAll))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        selectTap.addTab("통합", tapAll);

        btSearchTitle.setText("검색");

        javax.swing.GroupLayout tapTitleLayout = new javax.swing.GroupLayout(tapTitle);
        tapTitle.setLayout(tapTitleLayout);
        tapTitleLayout.setHorizontalGroup(
            tapTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapTitleLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(tfSearchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btSearchTitle)
                .addGap(73, 73, 73))
        );
        tapTitleLayout.setVerticalGroup(
            tapTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapTitleLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tapTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearchTitle))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        selectTap.addTab("도서명", tapTitle);

        btSearchAuthor.setText("검색");

        javax.swing.GroupLayout tapAuthorLayout = new javax.swing.GroupLayout(tapAuthor);
        tapAuthor.setLayout(tapAuthorLayout);
        tapAuthorLayout.setHorizontalGroup(
            tapAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapAuthorLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(tfSearchAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btSearchAuthor)
                .addGap(73, 73, 73))
        );
        tapAuthorLayout.setVerticalGroup(
            tapAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapAuthorLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tapAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearchAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearchAuthor))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        selectTap.addTab("저자", tapAuthor);

        tfSearchPublisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchPublisherActionPerformed(evt);
            }
        });

        btSearchPublisher.setText("검색");

        javax.swing.GroupLayout tapPublisherLayout = new javax.swing.GroupLayout(tapPublisher);
        tapPublisher.setLayout(tapPublisherLayout);
        tapPublisherLayout.setHorizontalGroup(
            tapPublisherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapPublisherLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(tfSearchPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btSearchPublisher)
                .addGap(73, 73, 73))
        );
        tapPublisherLayout.setVerticalGroup(
            tapPublisherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapPublisherLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tapPublisherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearchPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearchPublisher))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        selectTap.addTab("출판사", tapPublisher);

        tfSearchISBN13.setText("검색");

        btSearchISBN13.setText("검색");

        javax.swing.GroupLayout tapISBN13Layout = new javax.swing.GroupLayout(tapISBN13);
        tapISBN13.setLayout(tapISBN13Layout);
        tapISBN13Layout.setHorizontalGroup(
            tapISBN13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapISBN13Layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(tfSearchISBN13, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btSearchISBN13)
                .addGap(73, 73, 73))
        );
        tapISBN13Layout.setVerticalGroup(
            tapISBN13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapISBN13Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tapISBN13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearchISBN13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearchISBN13))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        selectTap.addTab("ISBN", tapISBN13);

        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo1.jpg"))); // NOI18N

        cardPanel.setLayout(new java.awt.CardLayout());

        btLogin.setText("로그인");

        btJoin.setText("회원가입");

        javax.swing.GroupLayout plNotLoginLayout = new javax.swing.GroupLayout(plNotLogin);
        plNotLogin.setLayout(plNotLoginLayout);
        plNotLoginLayout.setHorizontalGroup(
            plNotLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plNotLoginLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(btLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btJoin)
                .addContainerGap())
        );
        plNotLoginLayout.setVerticalGroup(
            plNotLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plNotLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plNotLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLogin)
                    .addComponent(btJoin))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        cardPanel.add(plNotLogin, "card2");

        btCart.setText("내 장바구니");

        btOrderHistory.setText("주문내역");

        btUserEdit.setText("회원정보 수정");

        btLogout.setText("로그아웃");

        btDelete.setText("회원탈퇴");

        lbUserid.setText("님");

        javax.swing.GroupLayout plLoginedLayout = new javax.swing.GroupLayout(plLogined);
        plLogined.setLayout(plLoginedLayout);
        plLoginedLayout.setHorizontalGroup(
            plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plLoginedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plLoginedLayout.createSequentialGroup()
                        .addComponent(btUserEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDelete))
                    .addGroup(plLoginedLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btCart)
                            .addGroup(plLoginedLayout.createSequentialGroup()
                                .addComponent(tfUserid)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbUserid)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btLogout)
                            .addComponent(btOrderHistory))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        plLoginedLayout.setVerticalGroup(
            plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plLoginedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLogout)
                    .addComponent(lbUserid)
                    .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCart)
                    .addComponent(btOrderHistory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plLoginedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btUserEdit)
                    .addComponent(btDelete))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        cardPanel.add(plLogined, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(barAdv, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(plAdv, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectTap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(125, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(imgLogo)
                        .addGap(64, 64, 64)
                        .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(scrollPane)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addComponent(selectTap, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))
                            .addComponent(scrollPane)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(barAdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(plAdv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void btHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btHomeActionPerformed
    
    private void btAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btAllActionPerformed

    private void tfSearchPublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchPublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchPublisherActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar barAdv;
    private javax.swing.JButton btAll;
    private javax.swing.JButton btCart;
    private javax.swing.JButton btCert;
    private javax.swing.JButton btChild;
    private javax.swing.JButton btClassic;
    private javax.swing.JButton btCulture;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEcono;
    private javax.swing.JButton btEssay;
    private javax.swing.JButton btHistory;
    private javax.swing.JButton btHobby;
    private javax.swing.JButton btHome;
    private javax.swing.JButton btJoin;
    private javax.swing.JButton btLang;
    private javax.swing.JButton btLogin;
    private javax.swing.JButton btLogout;
    private javax.swing.JButton btNovel;
    private javax.swing.JButton btOrderHistory;
    private javax.swing.JButton btReli;
    private javax.swing.JButton btSci;
    private javax.swing.JButton btSearchAll;
    private javax.swing.JButton btSearchAuthor;
    private javax.swing.JButton btSearchISBN13;
    private javax.swing.JButton btSearchPublisher;
    private javax.swing.JButton btSearchTitle;
    private javax.swing.JButton btSelf;
    private javax.swing.JButton btSoc;
    private javax.swing.JButton btTeen;
    private javax.swing.JButton btTodd;
    private javax.swing.JButton btUserEdit;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel imgAdv1;
    private javax.swing.JLabel imgAdv2;
    private javax.swing.JLabel imgAdv3;
    private javax.swing.JLabel imgAdv4;
    private javax.swing.JLabel imgAdv5;
    private javax.swing.JLabel imgAdv6;
    private javax.swing.JLabel imgAdv7;
    private javax.swing.JLabel imgAdv8;
    private javax.swing.JLabel imgAdv9;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lbUserid;
    private javax.swing.JPanel plAdv;
    private javax.swing.JPanel plAdv1;
    private javax.swing.JPanel plAdv2;
    private javax.swing.JPanel plAdv3;
    private javax.swing.JPanel plLogined;
    private javax.swing.JPanel plNotLogin;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTabbedPane selectTap;
    private javax.swing.JLabel slAdv1;
    private javax.swing.JLabel slAdv2;
    private javax.swing.JLabel slAdv3;
    private javax.swing.JTable table;
    private javax.swing.JPanel tapAll;
    private javax.swing.JPanel tapAuthor;
    private javax.swing.JPanel tapISBN13;
    private javax.swing.JPanel tapPublisher;
    private javax.swing.JPanel tapTitle;
    private javax.swing.JTextField tfSearchAll;
    private javax.swing.JTextField tfSearchAuthor;
    private javax.swing.JTextField tfSearchISBN13;
    private javax.swing.JTextField tfSearchPublisher;
    private javax.swing.JTextField tfSearchTitle;
    private javax.swing.JTextField tfUserid;
    // End of variables declaration//GEN-END:variables
    
    private void init() {
        model = new DefaultTableModel();
 
        setReload(userid);
    }
    
    private void addEvent() {
        imgLogo.addMouseListener(this);
        
        btLogin.addActionListener(this);
        btJoin.addActionListener(this);
        
        btSearchAll.addActionListener(this);
        btSearchTitle.addActionListener(this);
        btSearchAuthor.addActionListener(this);
        btSearchPublisher.addActionListener(this);
        btSearchISBN13.addActionListener(this);
        
        btAll.addActionListener(this);
        btCert.addActionListener(this);
        btChild.addActionListener(this);
        btClassic.addActionListener(this);
        btCulture.addActionListener(this);
        btEcono.addActionListener(this);
        btEssay.addActionListener(this);
        btHistory.addActionListener(this);
        btHobby.addActionListener(this);
        btHome.addActionListener(this);
        btLang.addActionListener(this);
        btNovel.addActionListener(this);
        btReli.addActionListener(this);
        btSci.addActionListener(this);
        btSelf.addActionListener(this);
        btSoc.addActionListener(this);
        btTeen.addActionListener(this);
        btTodd.addActionListener(this);
        
        table.addMouseListener(this);
        
        btCart.addActionListener(this);
        btOrderHistory.addActionListener(this);
        btUserEdit.addActionListener(this);
        btLogout.addActionListener(this);
        btDelete.addActionListener(this);
        
        tfSearchAll.addKeyListener(this);
        tfSearchAuthor.addKeyListener(this);
        tfSearchISBN13.addKeyListener(this);
        tfSearchPublisher.addKeyListener(this);
        tfSearchTitle.addKeyListener(this);
        
        slAdv1.addMouseMotionListener(this);
        slAdv2.addMouseMotionListener(this);
        slAdv3.addMouseMotionListener(this);
        
        imgAdv1.addMouseListener(this);
        imgAdv2.addMouseListener(this);
        imgAdv3.addMouseListener(this);
        imgAdv4.addMouseListener(this);
        imgAdv5.addMouseListener(this);
        imgAdv6.addMouseListener(this);
        imgAdv7.addMouseListener(this);
        imgAdv8.addMouseListener(this);
        imgAdv9.addMouseListener(this);
        
        
    }
    
           @Override
    public void mouseClicked(MouseEvent e) {
        BookDTO dto=new BookDTO();
        
        //로그 누르면 클리어
        if(e.getSource()==imgLogo){
            tfSearchAll.setText("");
            tfSearchAuthor.setText("");
            tfSearchISBN13.setText("");
            tfSearchPublisher.setText("");
            tfSearchTitle.setText("");
            tfSearchTitle.setText("");
            
            String[][] data = new String[0][0];
            model.setDataVector(data, colNames);
            table.setModel(model);
            scrollPane.setViewportView(table);
        }
        
        if(e.getSource()==table) {
            
            //선택된 데이터를 Book으로 넘겨줌 
            int row = table.getSelectedRow();
            String ISBN13=(String) table.getValueAt(row, 5);
            Book b = new Book(ISBN13, userid, this);
            b.setVisible(true);
        }
        
        if(e.getSource()==imgAdv1){
            String ISBN13="9791187993681";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv2){
            String ISBN13="9788936477196";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv3){
            String ISBN13="9791197021602";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv4){
            String ISBN13="9788936477196";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv5){
            String ISBN13="9791156758174";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv6){
            String ISBN13="9788952753946";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv7){
            String ISBN13="9788965746669";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv8){
            String ISBN13="9788965746669";
            imgToBook(ISBN13);
        }
        if(e.getSource()==imgAdv8){
            String ISBN13="9788934985747";
            imgToBook(ISBN13);
        }
      
    }
    
    public BookDTO imgToBook(String ISBN13){
        BookDTO dto= new BookDTO();
        
        try {
                dto=dao.selectISBN(ISBN13);
                
                Book b = new Book(ISBN13, userid, this);
                b.setVisible(true);
                
                
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
                return dto;
    }
    
      @Override
    public void mousePressed(MouseEvent e) { }
    @Override
    public void mouseReleased(MouseEvent e) { }
    @Override
    public void mouseEntered(MouseEvent e) { }
    @Override
    public void mouseExited(MouseEvent e) { }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        
        //검색 기능
        if(e.getSource()==btSearchAll) {
            String source="searchAll";
            String word=tfSearchAll.getText();
            searchWord(source, word);
        }
        if(e.getSource()==btSearchTitle) {
            String source="searchTitle";
            String word=tfSearchTitle.getText();
            searchWord(source, word);
        }
        if(e.getSource()==btSearchAuthor) {
            String source="searchAuthor";
            String word=tfSearchAuthor.getText();
            searchWord(source, word);
        }
        if(e.getSource()==btSearchPublisher) {
           String source="searchPublisher";
           String word=tfSearchPublisher.getText();
            searchWord(source, word);
        }
        if(e.getSource()==btSearchISBN13) {
           String source="searchISBN13";
           String word=tfSearchISBN13.getText();
            searchWord(source, word);
        }
        
        //카드1 - 로그인/회원가입
        if(e.getSource()==btLogin) {
            Login l = new Login(this);
            l.setVisible(true);
        }
        if(e.getSource()==btJoin) {
            Join j = new Join();
            j.setVisible(true);
        }
        
        //카드2 
        if(e.getSource()==btCart) {
            Cart c = new Cart(this, userid);
            c.setVisible(true);
        }
        if(e.getSource()==btOrderHistory) {
            OrderHistory h = new OrderHistory(userid, this);
            h.setVisible(true);
        }
        if(e.getSource()==btUserEdit) {
            Join j = new Join(userid);
            j.setVisible(true);
        }
        if(e.getSource()==btLogout) {
            userid="";
            tfUserid.setText(userid);
            setReload(userid);
        }
        if(e.getSource()==btDelete) {
            try {
                int ans=JOptionPane.showConfirmDialog(this, "정말로 회원탈퇴 하시겠습니까?", "회원탈퇴", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(ans==1) {
                    return;
                }
                        
                OrderbookDAO obDao=new OrderbookDAO();
                obDao.deleteUser(userid);
                
                OrdersendDAO osDao=new OrdersendDAO();
                osDao.deleteUser(userid);
                
                CartDAO cDao=new CartDAO();
                cDao.deleteUser(userid);
                
                MemberDAO mDao=new MemberDAO();
                mDao.deleteUser(userid);
                
                userid="";
                setReload(userid);
                
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        
        //분류 기준 검색
        if(e.getSource()==btAll) {
            String selKind="전체";
            searchKind(selKind);
        }
        if(e.getSource()==btHome) {
            String selKind="가정/요리/뷰티";
            searchKind(selKind);
        }
        if(e.getSource()==btHobby) {
            String selKind="건강/취미/레저";
            searchKind(selKind);
        }
        if(e.getSource()==btEcono) {
            String selKind="경제경영";
            searchKind(selKind);
        }
        if(e.getSource()==btClassic) {
            String selKind="고전";
            searchKind(selKind);
        }
        if(e.getSource()==btSci) {
            String selKind="과학";
            searchKind(selKind);
        }
        if(e.getSource()==btSoc) {
           String selKind="사회과학";
            searchKind(selKind);
        }
        if(e.getSource()==btNovel) {
            String selKind="소설/시/희곡";
            searchKind(selKind);
        }
        if(e.getSource()==btCert) {
            String selKind="수험서/자격증";
            searchKind(selKind);
        }
        if(e.getSource()==btChild) {
            String selKind="어린이";
            searchKind(selKind);
        }
        if(e.getSource()==btEssay) {
            String selKind="에세이";
            searchKind(selKind);
        }
        if(e.getSource()==btHistory) {
            String selKind="역사";
            searchKind(selKind);
        }
        if(e.getSource()==btCulture) {
           String selKind="예술/대중문화";
            searchKind(selKind);
        }
        if(e.getSource()==btLang) {
            String selKind="외국어";
            searchKind(selKind);
        }
        if(e.getSource()==btTodd) {
            String selKind="유아";
            searchKind(selKind);
        }
        if(e.getSource()==btSelf) {
            String selKind="자기계발";
            searchKind(selKind);
        }
        if(e.getSource()==btReli) {
            String selKind="종교/역학";
            searchKind(selKind);
        
        }if(e.getSource()==btTeen) {
            String selKind="청소년";
            searchKind(selKind);
        }
    }

    void searchWord(String source, String word) {
        if(word==null || word.isEmpty()) {
            JOptionPane.showMessageDialog(this, "검색어를 입력하세요");
        }
        
        try {
            list=dao.selectWord(source, word);
            
            DecimalFormat df = new DecimalFormat("#,###");
            String[][] data = new String[list.size()][6];
            
            for(int i=0;i<list.size();i++) {
                BookDTO dto=list.get(i);
                
                data[i][0]=dto.getTitle();
                data[i][1]=dto.getAuthor();
                data[i][2]=dto.getPublisher();
                data[i][3]=df.format(dto.getPrice());
                data[i][4]= new SimpleDateFormat("yyyy/MM/dd").format(dto.getPublisherDate());
                data[i][5]=dto.getISBN13();
            }
            
            model.setDataVector(data, colNames);
            table.setModel(model);
            scrollPane.setViewportView(table);
            
            table.getColumnModel().getColumn(0).setPreferredWidth(150);
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    

    private void searchKind(String selKind) {
        BookDAO dao=new BookDAO();
        try {
            list=dao.selectKind(selKind);
            
            String[][] data = new String[list.size()][6];
            DecimalFormat df = new DecimalFormat("#,###");
            
            for(int i=0;i<list.size();i++) {
                BookDTO dto=list.get(i);
                data[i][0]=dto.getTitle();
                data[i][1]=dto.getAuthor();
                data[i][2]=dto.getPublisher();
                data[i][3]=df.format(dto.getPrice());
                data[i][4]= new SimpleDateFormat("yyyy/MM/dd").format(dto.getPublisherDate());
                data[i][5]=dto.getISBN13();
            }
            
            model.setDataVector(data, colNames);
            table.setModel(model);
            scrollPane.setViewportView(table);
            
            table.getColumnModel().getColumn(0).setPreferredWidth(150);
            
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    
    void setReload(String userid) {
        this.userid=userid;
        
        if(userid==null || userid.isEmpty()) {
            cardPanel.removeAll();
            cardPanel.add(plNotLogin);
            revalidate();
        }else{
            cardPanel.removeAll();
            cardPanel.add(plLogined);
            tfUserid.setText(userid);
            tfUserid.setEditable(false);
            revalidate();
        }
    }

    @Override
    public void keyTyped(KeyEvent e) { }

    @Override
    public void keyPressed(KeyEvent e) { }

    @Override
    public void keyReleased(KeyEvent e) { 
        String word="";
        if(e.getSource()==tfSearchAll) {
            word=tfSearchAll.getText();
            tfSearchAuthor.setText(word);
            tfSearchISBN13.setText(word);
            tfSearchPublisher.setText(word);
            tfSearchTitle.setText(word);
        }
        if(e.getSource()==tfSearchAuthor) {
            word=tfSearchAuthor.getText();
            tfSearchAll.setText(word);
            tfSearchISBN13.setText(word);
            tfSearchPublisher.setText(word);
            tfSearchTitle.setText(word);
        }
        if(e.getSource()==tfSearchISBN13) {
             word=tfSearchISBN13.getText();
            tfSearchAuthor.setText(word);
            tfSearchAll.setText(word);
            tfSearchPublisher.setText(word);
            tfSearchTitle.setText(word);
        }
        if(e.getSource()==tfSearchPublisher) {
            word=tfSearchPublisher.getText();
            tfSearchAuthor.setText(word);
            tfSearchISBN13.setText(word);
            tfSearchAll.setText(word);
            tfSearchTitle.setText(word);
        }
        if(e.getSource()==tfSearchTitle) {
            word=tfSearchTitle.getText();
            tfSearchAuthor.setText(word);
            tfSearchISBN13.setText(word);
            tfSearchPublisher.setText(word);
            tfSearchAll.setText(word);
        }
        
        
        
    }

    @Override
    public void mouseDragged(MouseEvent e) { }

    @Override
    public void mouseMoved(MouseEvent e) {
        
        
        if(userid==null || userid.isEmpty()) {
            cardPanel.removeAll();
            cardPanel.add(plNotLogin);
            revalidate();
        }else{
            cardPanel.removeAll();
            cardPanel.add(plLogined);
            tfUserid.setText(userid);
            tfUserid.setEditable(false);
            revalidate();
        }
        
        
        if(e.getSource()==slAdv1){
            plAdv.removeAll();
            plAdv.add(plAdv1);
            revalidate();
        }
        if(e.getSource()==slAdv2){
             plAdv.removeAll();
            plAdv.add(plAdv2);
            revalidate();
        }
        if(e.getSource()==slAdv3){
             plAdv.removeAll();
            plAdv.add(plAdv3);
            revalidate();
        }
    }
    
}
